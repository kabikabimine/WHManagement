async function searchData(page = 1) {
  const query = document.getElementById('search-query').value;
  const response = await fetch(`/search?query=${query}&page=${page}`);
  const data = await response.json();

  // Cập nhật danh sách hàng hóa
  const inventoryList = document.getElementById('inventory-list');
  inventoryList.innerHTML = ''; // Xóa dữ liệu cũ

  data.managementInventory.forEach(item => {
    const row = document.createElement('tr');
    row.innerHTML = `
      <td class="text-center align-middle"><h6 class="mb-0 text-sm">${item.ID}</h6></td>
      <td class="text-center align-middle"><h6 class="mb-0 text-sm">${item.Epicor}</h6></td>
      <td class="text-center align-middle">
        <h6 class="mb-0 text-sm">${item.EngName}</h6>
        <p class="text-xs text-secondary mb-0">${item.VNName}</p>
      </td>
      <td class="text-center align-middle"><h6 class="mb-0 text-sm">${item.Manufacturer}</h6></td>
      <td class="text-center align-middle"><h6 class="mb-0 text-sm">${item.POCode}</h6></td>
      <td class="text-center align-middle"><span class="text-xs font-weight-bold">${item.QuantityTotal}</span></td>
      <td class="text-center align-middle"><h6 class="mb-0 text-sm">${item.Inputer}</h6></td>
      <td class="text-center align-middle">
        <span class="text-xs font-weight-bold">${new Date(item.DateInput).toLocaleString('vi-VN', { day: '2-digit', month: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit' })}</span>
      </td>
      <td class="text-center align-middle">
        <span class="text-xs font-weight-bold">${new Date(item.DateUpdate).toLocaleString('vi-VN', { day: '2-digit', month: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit' })}</span>
      </td>
    `;
    inventoryList.appendChild(row);
  });

  // Cập nhật phân trang
  updatePagination(data.currentPage, data.totalPages);
}

function updatePagination(currentPage, totalPages) {
  const pagination = document.getElementById('pagination');
  pagination.innerHTML = ''; // Xóa phân trang cũ

  for (let i = 1; i <= totalPages; i++) {
    const pageButton = document.createElement('button');
    pageButton.textContent = i;
    pageButton.classList.add('btn', 'btn-outline-primary');
    if (i === currentPage) {
      pageButton.classList.add('active');
    }
    pageButton.addEventListener('click', () => {
      searchData(i);
    });
    pagination.appendChild(pageButton);
  }
}
